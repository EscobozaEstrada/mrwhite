version: 1

applications:
  - appRoot: frontend
    frontend:
      phases:
        preBuild:
          commands:
            - echo "üì¶ Fetching environment variables from AWS SSM Parameter Store..."

            # Define helper to get SSM parameters
            - |
              get_ssm_param() {
                echo "üîç Fetching SSM parameter: $1"
                aws ssm get-parameter \
                  --name "$1" \
                  --with-decryption \
                  --region s-east-1 \
                  --query "Parameter.Value" \
                  --output text 2>&1 || echo ""
              }

              # Base prefix for parameters
              SSM_PREFIX="/monetizespirit/mrwhite/prod"

              echo "üì• Loading environment variables from SSM..."
              echo "üåç AWS Region: s-east-1"
              echo "üìÇ SSM Prefix: $SSM_PREFIX"

              export NEXT_PUBLIC_API_BASE_URL=$(get_ssm_param "$SSM_PREFIX/api_base_url")
              export NEXT_PUBLIC_API_VERSION=$(get_ssm_param "$SSM_PREFIX/api_version")
              export NEXT_PUBLIC_FASTAPI_BASE_URL=$(get_ssm_param "$SSM_PREFIX/fastapi_base_url")
              export NEXT_PUBLIC_FLASK_BASE_URL=$(get_ssm_param "$SSM_PREFIX/flask_base_url")

              # Frontend configuration
              export NEXT_PUBLIC_FRONTEND_URL=$(get_ssm_param "$SSM_PREFIX/frontend_url")
              export NEXT_PUBLIC_SITE_URL=$(get_ssm_param "$SSM_PREFIX/site_url")
              export NEXT_PUBLIC_APP_ENV=$(get_ssm_param "$SSM_PREFIX/app_env")
              export NEXT_PUBLIC_APP_NAME=$(get_ssm_param "$SSM_PREFIX/app_name")
              export NEXT_PUBLIC_APP_DESCRIPTION=$(get_ssm_param "$SSM_PREFIX/app_description")
              export NEXT_PUBLIC_APP_TAGLINE=$(get_ssm_param "$SSM_PREFIX/app_tagline")
              export NEXT_PUBLIC_APP_TITLE=$(get_ssm_param "$SSM_PREFIX/app_title")

              # Auth & Analytics
              export NEXT_PUBLIC_AUTH_COOKIE_NAME=$(get_ssm_param "$SSM_PREFIX/auth_cookie_name")
              export NEXT_PUBLIC_GOOGLE_ANALYTICS_ID=$(get_ssm_param "$SSM_PREFIX/google_analytics_id")

              # Firebase
              export NEXT_PUBLIC_FIREBASE_API_KEY=$(get_ssm_param "$SSM_PREFIX/firebase_api_key")
              export NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=$(get_ssm_param "$SSM_PREFIX/firebase_auth_domain")
              export NEXT_PUBLIC_FIREBASE_PROJECT_ID=$(get_ssm_param "$SSM_PREFIX/firebase_project_id")
              export NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=$(get_ssm_param "$SSM_PREFIX/firebase_storage_bucket")
              export NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=$(get_ssm_param "$SSM_PREFIX/firebase_messaging_sender_id")
              export NEXT_PUBLIC_FIREBASE_APP_ID=$(get_ssm_param "$SSM_PREFIX/firebase_app_id")
              export NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=$(get_ssm_param "$SSM_PREFIX/firebase_measurement_id")
              export NEXT_PUBLIC_FIREBASE_VAPID_KEY=$(get_ssm_param "$SSM_PREFIX/firebase_vapid_key")

              # Stripe / Payment
              export NEXT_PUBLIC_STRIPE_PUBLIC_KEY=$(get_ssm_param "$SSM_PREFIX/stripe_public_key")

              # Endpoints
              export NEXT_PUBLIC_CHAT_ENDPOINT=$(get_ssm_param "$SSM_PREFIX/chat_endpoint")
              export NEXT_PUBLIC_CONVERSATIONS_ENDPOINT=$(get_ssm_param "$SSM_PREFIX/conversations_endpoint")
              export NEXT_PUBLIC_BOOKMARKS_ENDPOINT=$(get_ssm_param "$SSM_PREFIX/bookmarks_endpoint")
              export NEXT_PUBLIC_MESSAGES_ENDPOINT=$(get_ssm_param "$SSM_PREFIX/messages_endpoint")

              # Routes
              export NEXT_PUBLIC_LOGIN_ROUTE=$(get_ssm_param "$SSM_PREFIX/login_route")
              export NEXT_PUBLIC_SIGNUP_ROUTE=$(get_ssm_param "$SSM_PREFIX/signup_route")
              export NEXT_PUBLIC_DASHBOARD_ROUTE=$(get_ssm_param "$SSM_PREFIX/dashboard_route")
              export NEXT_PUBLIC_TALK_ROUTE=$(get_ssm_param "$SSM_PREFIX/talk_route")
              export NEXT_PUBLIC_ABOUT_ROUTE=$(get_ssm_param "$SSM_PREFIX/about_route")
              export NEXT_PUBLIC_CONTACT_ROUTE=$(get_ssm_param "$SSM_PREFIX/contact_route")
              export NEXT_PUBLIC_SUBSCRIPTION_ROUTE=$(get_ssm_param "$SSM_PREFIX/subscription_route")

              # Upload configuration
              export NEXT_PUBLIC_MAX_FILE_SIZE=$(get_ssm_param "$SSM_PREFIX/max_file_size")
              export NEXT_PUBLIC_ALLOWED_FILE_TYPES=$(get_ssm_param "$SSM_PREFIX/allowed_file_types")
              export NEXT_PUBLIC_ALLOWED_IMAGE_TYPES=$(get_ssm_param "$SSM_PREFIX/allowed_image_types")
              export NEXT_PUBLIC_UPLOAD_ENDPOINT=$(get_ssm_param "$SSM_PREFIX/upload_endpoint")

              # ElevenLabs / Voice
              export NEXT_PUBLIC_ELEVEN_LABS_API_KEY=$(get_ssm_param "$SSM_PREFIX/eleven_labs_api_key")
              export NEXT_PUBLIC_MR_WHITE_VOICE_ID=$(get_ssm_param "$SSM_PREFIX/mr_white_voice_id")

              echo ""
              echo "‚úÖ Environment variables loaded from SSM"
              echo ""
              echo "üîç Verifying critical variables..."
              echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
              
              # Debug output (showing first 10 chars for security)
              echo "üìä Debug Values:"
              echo "  STRIPE_KEY: ${NEXT_PUBLIC_STRIPE_PUBLIC_KEY:0:10}..."
              echo "  FIREBASE_API_KEY: ${NEXT_PUBLIC_FIREBASE_API_KEY:0:10}..."
              echo "  API_BASE_URL: $NEXT_PUBLIC_API_BASE_URL"
              echo "  FASTAPI_BASE_URL: $NEXT_PUBLIC_FASTAPI_BASE_URL"
              echo ""
              
              # Validation checks
              MISSING_VARS=0
              
              if [ -z "$NEXT_PUBLIC_FIREBASE_API_KEY" ]; then
                echo "‚ùå CRITICAL: Missing FIREBASE_API_KEY"
                MISSING_VARS=$((MISSING_VARS + 1))
              else
                echo "‚úÖ Firebase configured"
              fi
              
              if [ -z "$NEXT_PUBLIC_STRIPE_PUBLIC_KEY" ]; then
                echo "‚ùå CRITICAL: Missing STRIPE_PUBLIC_KEY"
                MISSING_VARS=$((MISSING_VARS + 1))
              else
                echo "‚úÖ Stripe configured"
              fi
              
              if [ -z "$NEXT_PUBLIC_API_BASE_URL" ]; then
                echo "‚ùå CRITICAL: Missing API_BASE_URL"
                MISSING_VARS=$((MISSING_VARS + 1))
              else
                echo "‚úÖ API URL configured"
              fi
              
              if [ -z "$NEXT_PUBLIC_FASTAPI_BASE_URL" ]; then
                echo "‚ùå CRITICAL: Missing FASTAPI_BASE_URL"
                MISSING_VARS=$((MISSING_VARS + 1))
              else
                echo "‚úÖ FastAPI URL configured"
              fi
              
              echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
              
              if [ $MISSING_VARS -gt 0 ]; then
                echo ""
                echo "‚ùå Build failed: $MISSING_VARS critical environment variable(s) missing"
                echo ""
                echo "üîß Troubleshooting steps:"
                echo "  1. Verify SSM parameters exist in us-west-2:"
                echo "     aws ssm get-parameter --name '$SSM_PREFIX/stripe_public_key' --region us-west-2"
                echo ""
                echo "  2. Check Amplify IAM role has these permissions:"
                echo "     - ssm:GetParameter"
                echo "     - ssm:GetParametersByPath"
                echo "     Resource: arn:aws:ssm:us-west-2:*:parameter/monetizespirit/mrwhite/prod/*"
                echo ""
                echo "  3. Verify parameter names match exactly (case-sensitive)"
                echo ""
                exit 1
              fi
              
              echo "‚úÖ All critical environment variables validated"

            - echo "üì¶ Installing dependencies..."
            - npm ci

        build:
          commands:
            - echo "üî® Building Next.js application..."
            - npm run build
            - echo "‚úÖ Build complete"

      artifacts:
        baseDirectory: out
        files:
          - '**/*'

      cache:
        paths:
          - node_modules/**/*
          - .next/cache/**/*
